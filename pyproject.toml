# nossis-docs, serverless hosting for static, private web sites that
# works like GitHub Pages
#
# Copyright (C) 2024  Matthew X. Economou
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License along with this program.  If not, see
# <https://www.gnu.org/licenses/>.

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"


[project]
# cf. tool.setuptools.package-dir section below
name = "nossis-docs"
description = "Serverless hosting for static, private web sites that works like GitHub Pages"
version = "0.0.0"
# cf. https://www.bitecode.dev/p/relieving-your-python-packaging-pain,
# https://devguide.python.org/versions/
requires-python = ">=3.11"
# cf. https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: No Input/Output (Daemon)",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent",
]
# To avoid unnecessary developer overhead, only set version
# constraints to address capability, compatibility, or security
# issues, and avoid pinning specific versions if possible.
dependencies = [
    "aws-lambda-powertools",
    "boto3",
    "boto3-stubs[cloudfront,codepipeline]",
]

[project.license]
file = "LICENSE"

[project.optional-dependencies]
dev = [
    "autopep8",
    "black",
    "boto3-stubs[all]",
    "build",
    "flake8-bugbear",
    "flake8-pytest-style",
    "id",
    "isort",
    "jedi",
    "matplotlib",
    "myst-parser[linkify,rtd]",
    "pip-tools",
    "pre-commit",
    "pystemmer",
    "python-semantic-release",
    "sphinx-intl",
    "sphinx-multiversion @ git+https://github.com/Holzhaus/sphinx-multiversion#egg=sphinx-multiversion",
    "twine",
    "yapf",
    "yq",
]
test = [
    "faker",
    "moto[all]",
    "pytest",
    "pytest-cov",
    "pytest-emoji",
    "pytest-md",
    "pytest-order",
    "pytest-reportlog",
    "pytest-socket",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"


[tool.isort]
profile = "black"
skip_gitignore = true


[tool.pytest.ini_options]
# Recommended for new projects;
# cf. https://docs.pytest.org/en/latest/explanation/goodpractices.html#choosing-an-import-mode.
addopts = [
    "--import-mode=importlib",
]
# Invoke smoke tests with `pytest -k smoke` or `pytest -m "smoke and
# not slow"`.  See also https://docs.pytest.org/en/stable/mark.html,
# https://stackoverflow.com/a/52369721.
markers = [
    "slow",
    "smoke",
]


[tool.semantic_release]
commit_message = "release: cut the v{version} release\n\nAutomatically generated by python-semantic-release"
version_toml = [
    "pyproject.toml:project.version",
]

[tool.semantic_release.changelog.environment]
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"


[tool.setuptools.package-dir]
nossis_docs = "src/nossis_docs"
